<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.anabada.dao.UsedDAO">

    <insert id="purchase" parameterType="Used_detail">
    	INSERT INTO used_detail
	    	(uDetail_id, used_id, user_email, uDetail_method,
	    	 uDetail_person, uDetail_phone,
	    	 uDetail_post, uDetail_addr1, uDetail_addr2, uDetail_memo,
	    	 uDetail_price)
		VALUES
    		(func_seq_10('UDET'), #{used_id}, #{user_email}, '안전거래',
    		#{uDetail_person}, #{uDetail_phone},
    		#{uDetail_post}, #{uDetail_addr1}, #{uDetail_addr2},  #{uDetail_memo},
    		#{uDetail_price})
    </insert>
    
    <select id="findOneUsed" parameterType="String" resultType="Used">
    	SELECT *
    	FROM used WHERE used_id = #{used_id}
    </select>
    
    <select id="findUser" parameterType="String" resultType="UserDTO">
    	SELECT * FROM user WHERE user_email = #{user_email}
    </select>
    
    <update id="usemoney" parameterType="map">
    	UPDATE user
    	SET user_account = #{account}
    	WHERE user_email = #{user_email}
    </update>
    
    <!--중고 팝니다 글 저장 매퍼-->
    <insert id="usedSellWrite" parameterType="Used">
    	 INSERT INTO
    		used(
	    		used_id
				,user_email
				,category_id
				,used_title
				,used_price
				,used_content
				,used_status
				,used_quality
    		    )
    	VALUES(
	    		func_seq_10('USED')
    			,#{user_email}
    			,#{category_id}
    			,#{used_title}
    			,#{used_price}
    			,#{used_content}
    			,'거래 중'
    			,#{used_quality}
    			)
    	<selectKey keyProperty="used_id" keyColumn="used_id" resultType="String" order="AFTER">
    		SELECT 
    			used_id 
    		from 
    			used
    		order by
    			used_date desc
    		LIMIT 1
    	</selectKey>
    </insert>
    
    <insert id="insertFile" parameterType="File">
    	INSERT INTO
    		file(
    			file_id
    			,board_status
    			,board_no
    		<if test="file_origin !=null and file_origin != ''">
    			,file_origin
    		</if>
    		<if test="file_saved !=null and file_saved != ''">
    			,file_saved
    		</if>
    			)
    		VALUES
    			(
    			func_seq_10('FILE')
    			,#{board_status}
    			,#{board_no}
    		<if test="file_origin !=null and file_origin != ''">
    			,#{file_origin}
    		</if>
    		<if test="file_saved !=null and file_saved != ''">
    			,#{file_saved}
    		</if>
    			)
    </insert>
    
    <insert id="usedBuyWrite" parameterType="Used_buy">
    	 INSERT INTO
    		used_buy(
	    		uBuy_id
				,user_email
				,category_id
				,uBuy_title
				,uBuy_content
				,uBuy_status
    		    )
    	VALUES(
	    		func_seq_10('UBUY')
    			,#{user_email}
    			,#{category_id}
    			,#{uBuy_title}
    			,#{uBuy_content}
    			,'거래 중'
    			)
    </insert>
    
    <!-- 중고거래 파는 글 다 가져오기 -->
    <select id="usedSellBoard" resultType="Used" parameterType="map">
    	SELECT
			*
    	FROM
    		used LEFT JOIN user ON used.user_email = user.user_email
		<where>
			<if test="searchWord != null and type != null" >
				<if test="type == 'used_title'">
					upper(used.used_title) like upper(CONCAT('%',#{searchWord},'%'))
				</if>
				
				<if test = "type == 'used_content'">
					upper(used.used_content) like upper(CONCAT('%',#{searchWord},'%'))
				</if>
				
				<if test = "type == 'user_nick'">
					upper(user.user_nick) like upper(CONCAT('%',#{searchWord},'%'))
				</if>
				<if test ="type == 'all'">
					upper(used.used_title) like upper(CONCAT('%',#{searchWord},'%'))
					or upper(used.used_content) like upper(CONCAT('%',#{searchWord},'%'))
					or upper(user.user_nick) like upper(CONCAT('%',#{searchWord},'%'))
				</if>
			</if>
			 and used.used_status = '거래 중'
		</where>
		<if test="check != null and check !=''">
			ORDER BY
			<if test="check == 'rank'">
				used.used_id
			</if>
			<if test="check == 'low'">
				used.used_price
			</if>
			<if test="check == 'high'">
				used.used_price DESC
			</if>
			<if test="check == 'recent'">
				used.used_date DESC
			</if>									
		</if>
    </select>
    
    <!-- 전체 글 개수 -->
	<select id="total" parameterType="map" resultType="int">
		select count(*)
		FROM
    		used LEFT JOIN user ON used.user_email = user.user_email
		<where>
			<if test="searchWord != null and type != null" >
				<if test="type == 'used_title'">
					upper(used.used_title) like upper(CONCAT('%',#{searchWord},'%'))
				</if>
				
				<if test = "type == 'used_content'">
					upper(used.used_content) like upper(CONCAT('%',#{searchWord},'%'))
				</if>
				
				<if test = "type == 'user_nick'">
					upper(user.user_nick) like upper(CONCAT('%',#{searchWord},'%'))
				</if>
				<if test ="type == 'all'">
					upper(used.used_title) like upper(CONCAT('%',#{searchWord},'%'))
					or upper(used.used_content) like upper(CONCAT('%',#{searchWord},'%'))
					or upper(user.user_nick) like upper(CONCAT('%',#{searchWord},'%'))
				</if>
			</if>
			 and used.used_status = '거래 중'
		</where>
		<if test="check != null and check !=''">
			ORDER BY
			<if test="check == 'rank'">
				used.used_id
			</if>
			<if test="check == 'low'">
				used.used_price
			</if>
			<if test="check == 'high'">
				used.used_price DESC
			</if>
			<if test="check == 'recent'">
				used.used_date DESC
			</if>									
		</if>
	</select>
	
	 <select id="fileList" resultType="File">
       SELECT
          *
       FROM
          file
       WHERE (board_no, file_id) in (
          SELECT board_no, min(file_id) FROM file GROUP BY board_no)
    </select>
    
    <!-- 중고거래 사는 글 다 가져오기 -->
    <select id="usedBuyBoard" resultType="Used_buy">
    	SELECT
    		*
    	FROM
    		used_buy
    	WHERE uBuy_status = '거래 중';
    	
    </select>
    
    <!-- 중고거래 사는 글 한개 읽기 -->
    <select id="usedBuyBoardRead" parameterType="String" resultType="Used_buy">
    	SELECT
    		uBuy_id
			,user_email
			,category_id
			,uBuy_title
			,uBuy_content
    	FROM
    		used_buy
    	WHERE
    		uBuy_id = #{uBuy_id}
    </select>
    
     <!-- 중고거래 파는 글 한개 읽기 -->
    <select id="usedSellBoardRead" parameterType="String" resultType="Used">
    	SELECT
    		used_id
			, user_email
			, category_id
			, used_title
			, DATE_FORMAT(used_date, '%Y-%m-%d')
			, used_price
			, used_content
			, used_quality
			, used_status
    	FROM
    		used
    	WHERE
    		used_id = #{used_id}
    </select>
    
   <!--  <select id="fileList" resultType="File">
    	SELECT
    		*
    	FROM
    		file
    	where
    		board_no = #{user_id}
    </select> -->
    
    <!-- 중고거래 파는 글 삭제 -->
	<update id="usedSellBoardDelete" parameterType="Used">
    	UPDATE used
	    SET used_status = '거래 중지'
	    WHERE used_id = #{used_id}
    <!--  AND
            user_email = #{user_email} 나중에 로그인하고 주석해제해야함-->
	</update>
	
 <select id="recommendList" resultType="Used" parameterType="map">
    	SELECT
    		*
    	FROM
    		used
	
		<if test="searchWord != null and type != null" >
			<where>
				<if test="type =='used_title'">
					upper(used_title) like '%' || upper(#{searchWord}) || '%'
				</if>
				<if test = "type =='used_content'">
					upper(used_content) like '%' || upper(#{searchWord}) || '%'
				</if>
				<if test = "type == 'user_email'">
					user_email = #{searchWord}
				</if>
				<if test ="type == 'all'">
					upper(used_title) like '%' || #{searchWord} || '%'
					or upper(used_content) like '%' || #{searchWord} || '%'
					or user_email = #{searchWord}
				</if>
			</where>
		</if>
    </select>
    
    <select id="gettitle" resultType="String">
    	SELECT uBuy_title FROM used_buy
    </select>
		
	<!-- 중고거래 사는글 삭제-->
	<update id="usedBuyBoardDelete" parameterType="Used_buy">
    	UPDATE used_buy
	    SET uBuy_status = '거래 중지'
	    WHERE uBuy_id = #{uBuy_id}
    <!--  AND
            user_email = #{user_email} 나중에 로그인하고 주석해제해야함-->
	</update>

	<!-- 중고거래 사는글 수정 -->
	<update id="usedBuyBoardUpdate" parameterType="Used_buy">
		UPDATE
			used_buy
		SET
			 uBuy_title = #{uBuy_title}
			 <!-- ,category_id =#{category_id} 나중에 넣으면 주석해제해야함 -->
			 ,uBuy_content = #{uBuy_content}
		WHERE
			uBuy_id = #{uBuy_id}
		<!-- AND
			user_email = #{user_email} 나중에 로그인하고 주석해제해야함-->
	</update>

	<!-- 중고거래 파는 글 수정 -->	
	<update id="usedSellBoardUpdate" parameterType="Used">
	    UPDATE used
	    SET
	        category_id = #{category_id},
	        used_title = #{used_title},
	        used_date = #{used_date},
	        used_price = #{used_price},
	        used_content = #{used_content},
	        used_quality = #{used_quality},
	        used_status = #{used_status}
	    WHERE
	        used_id = #{used_id}
	</update>

  	<select id="fileListAll" resultType="File" parameterType="String">
  		SELECT
  			*
  		FROM 
  			file
  		WHERE
  			board_no = #{used_id}
  	</select>
  	
	 <select id="fileListByid" parameterType="String" resultType="File">
       SELECT
          *
       FROM
          file
       WHERE board_no = #{id}
    </select>
    
    <insert id="addtemp" parameterType="Used">
    	INSERT INTO board_temp (
	    		bTemp_id
				,user_email
				,category_id
				,bTemp_title
				,bTemp_price
				,bTemp_content
				,bTemp_quality
    		    )
    	VALUES(
	    		func_seq_10('UTEM')
    			,#{user_email}
    			,#{category_id}
    			,#{used_title}
    			,#{used_price}
    			,#{used_content}    			
    			,#{used_quality}    						
    			)    	
    </insert>
    
    <insert id="addsearchWord" parameterType="map">
		INSERT INTO search
		 (search_no, user_email, search_word)
		 SELECT func_seq_10('SRCH'), #{email}, #{searchWord}
		 FROM DUAL WHERE NOT EXISTS(SELECT * FROM search WHERE user_email = #{email} AND search_word = #{searchWord})
    </insert>
    
    <delete id="deleteWord">
    	DELETE FROM search WHERE NOW() > DATE_ADD(date(search_date), INTERVAL 7 DAY)
    </delete>
    
     <update id="addmoney" parameterType="map">
    	UPDATE 
    		user
    	SET
    		user_account = user_account + #{money}
    	WHERE
            user_email = #{email};
    </update>
    
    <update id="purchaseupdate" parameterType="String">
    	UPDATE 
    		used
    	SET
    		used_status = '거래 완료'
    	WHERE
            used_id = #{used_id};
    </update>
    
    <select id="maincategory" resultType="Category">
    	SELECT category_main FROM category
    </select>
    
    <select id="subcategory" parameterType="String" resultType="Category">
    	SELECT * FROM category WHERE category_main = #{main}
    </select>
</mapper>
	
